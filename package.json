{
	"name": "websearchengine",
	"displayName": "Web Search",
	"icon": "images/icon.webp",
	"description": "Search the web directly from inside VSCode on your favorite search engines / websites (add as many as you like, customizable in settings like Google Chrome / Edge)",
	"version": "6.9.9",
	"publisher": "BenRogersWPG",
	"author": {
		"name": "Ben Rogers"
	},
	"homepage": "https://github.com/BenRogersWPG/WebSearch/blob/master/README.md",
	"license": "SEE LICENSE IN LICENSE.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/BenRogersWPG/WebSearch"
	},
	"bugs": "https://github.com/BenRogersWPG/WebSearch/issues",
	"sponsor": {
		"url": "https://github.com/sponsors/BenRogersWPG"
	},
	"badges": [
		{
			"url": "https://img.shields.io/visual-studio-marketplace/stars/BenRogersWPG.websearchengine",
			"href": "https://marketplace.visualstudio.com/items?itemName=BenRogersWPG.websearchengine&ssr=false#review-details",
			"description": "Marketplace rating"
		},
		{
			"url": "https://img.shields.io/visual-studio-marketplace/azure-devops/installs/total/BenRogersWPG.websearchengine",
			"href": "https://marketplace.visualstudio.com/items?itemName=BenRogersWPG.websearchengine",
			"description": "Marketplace installs"
		},
		{
			"url": "https://img.shields.io/visual-studio-marketplace/d/BenRogersWPG.websearchengine",
			"href": "https://marketplace.visualstudio.com/items?itemName=BenRogersWPG.websearchengine",
			"description": "Marketplace downloads"
		}
	],
	"engines": {
		"vscode": "^1.67.2"
	},
	"categories": [
		"Keymaps",
		"Snippets",
		"Other"
	],
	"keywords": [
		"Search",
		"Google",
		"Research",
		"Browser",
		"Web",
		"Customizable",
		"Settings",
		"Research",
		"Menu",
		"Search Engine",
		"SEO",
		"Autocomplete",
		"Suggest"
	],
	"extensionKind": [
		"workspace",
		"ui"
	],
	"activationEvents": [
		"onCommand:WebSearch.webSearchMenu",
		"onCommand:WebSearch.webSearch",
		"onCommand:WebSearch.firstRun",
		"onCommand:WebSearch.changeSetting",
		"onCommand:WebSearch.changeNotifications",
		"onCommand:WebSearch.openSettings",
		"onCommand:WebSearch.oneSearchEngine",
		"onCommand:WebSearch.setContext",
		"onCommand:WebSearch.selectedTextDemo"
	],
	"browser": "./out/web/extension.js",
	"main": "./out/extension",
	"contributes": {
		"commands": [
			{
				"command": "WebSearch.webSearchMenu",
				"title": "Web Search selected text",
				"when": "editorTextFocus"
			},
			{
				"command": "WebSearch.webSearch",
				"title": "Web Search"
			}
		],
		"keybindings": [
			{
				"key": "alt+s",
				"command": "WebSearch.webSearch",
				"when": "isLinux && isWeb || isLinux"
			},
			{
				"key": "alt+`",
				"command": "WebSearch.webSearchMenu",
				"when": "isWindows || isMac || isWeb && !isLinux"
			}
		],
		"walkthroughs": [
			{
				"id": "WebSearchWalkthrough",
				"title": "Web Search Walkthrough",
				"description": "Quick tips to get started using the extension so you can boost your productivity. Thanks for installing Web Search!",
				"steps": [
					{
						"id": "selectedtextdemo",
						"title": "Perform a Demo Search using Selected Text ‚úçÔ∏è",
						"description": "The extension will always prefer to search using the selected text.\nThis step will simulate selecting some example text, ``eslint``, and then run the Web Search extension.\n[Try Searching Using Selected Text, 'eslint'](command:WebSearch.selectedTextDemo)",
						"media": {
							"image": "images/web-search-selected-text-demo.webp",
							"altText": "Screenshot displaying VS Code with a code editor window open and the selected text of 'eslint' highlighted"
						},
						"completionEvents": [
							"onContext:searchSelectedText"
						]
					},
					{
						"id": "runcommand",
						"title": "Search using the Search Bar üîé",
						"description": "This step will run a Web Search with **demo mode** on to show you how it looks with multiple sites\nSimply run the command, type a search query in the search bar above (__which uses autocomplete__), and see the site list options.\n[Try Out the Search Bar](command:WebSearch.firstRun)",
						"media": {
							"image": "images/web-search-bar.avifs",
							"altText": "Screenshot of the Web Search search bar, with someone typing for 'any text you wish'"
						},
						"completionEvents": [
							"onContext:firstRun"
						]
					},
					{
						"id": "opensettings",
						"title": "Add Your Own Search Engines ‚ûï",
						"description": "This step will open the extension settings.\nAdd search engines using Item/Value pairs like the GIF to the right.\nSearch engines are added in the same way you would add one in your web browser, using ``%s`` in the URL to replace the search query.\n[Start Adding Custom Search Engines](command:WebSearch.openSettings)",
						"media": {
							"image": "images/web-search-add-any-site.avif",
							"altText": "Animation of adding a new search engine to the Web Search extension using the extension settings, then performing a search using the new search engine"
						},
						"completionEvents": [
							"onCommand:WebSearch.openSettings"
						]
					},
					{
						"id": "runsecondcommand",
						"title": "Try Your Own Search Engines üîé",
						"description": "Now that you have added your own search engines, this step will show you how it looks with your custom-added search engines\nSimply run the command, type a search query, and see the site list options.\n[Try WebSearch With Your Custom Search Engines](command:WebSearch.setContext)",
						"media": {
							"image": "images/web-search-submenu-demo-large.webp",
							"altText": "Screenshot of the Web Search submenu with multiple sites listed, and the website of GitHub highlighted"
						},
						"completionEvents": [
							"onContext:customSearch"
						]
					},
					{
						"id": "changesetting",
						"title": "Turn Off Demo Mode ‚öôÔ∏è",
						"description": "This step will turn off demo mode so the extension will only display the search engines you recently added.\nYou can always turn demo mode back on in the extension settings (set ``webSearch.useDefaultSearchEnginesList`` to ``True``).\n[Turn off Demo Mode](command:WebSearch.changeSetting)",
						"media": {
							"image": "images/web-search-add-any-site.avif",
							"altText": "Animation of adding a new search engine to the Web Search extension using the extension settings, then performing a search using the new search engine"
						}
					},
					{
						"id": "onlyonesearchengine",
						"title": "FYI - Only One Search Engine 1Ô∏è‚É£",
						"description": "If you only have one search engine in your custom settings (and **Demo Mode** is off), then the extension will automatically search from that site.\nIt will not pop up with the submenu of sites to select from (**Defaults to Google**).\nRemember to add more search engines if you want to search from multiple sites.\n[Add Additional Custom Search Engines](command:WebSearch.oneSearchEngine)",
						"media": {
							"image": "images/web-search-add-any-site.avif",
							"altText": "Animation of adding a new search engine to the Web Search extension using the extension settings, then performing a search using the new search engine"
						},
						"completionEvents": [
							"onCommand:WebSearch.oneSearchEngine"
						]
					},
					{
						"id": "messagelevels",
						"title": "Adjust Notification Levels üîî",
						"description": "This extension allows you to control the level at which notifications are displayed. If you are finding it too verbose while using, you can adjust the notifications or remove them entirely using this setting. \n[Adjust Notifications](command:WebSearch.changeNotifications)",
						"media": {
							"image": "images/web-search-notifications.webp",
							"altText": "Screenshot showing an example of an information message when searching for 'eslint', which reads 'Searching Stack Overflow for: eslint'"
						}
					},
					{
						"id": "keybindingsLinux",
						"title": "Search Using Keyboard Shortcut ‚å®Ô∏è",
						"description": "You can use the Web Search extension in multiple ways.\nThis step will show you that you can run the extension using the keyboard shortcut of:\n``Alt + `s`.",
						"media": {
							"image": "images/web-search-keyboard-shortcut-linux.webp",
							"altText": "Keyboard shortcut for the Web Search extension when using Linux which is Alt+s"
						},
						"when": "isLinux && isWeb || isLinux"
					},
					{
						"id": "keybindings",
						"title": "Search Using Keyboard Shortcut ‚å®Ô∏è",
						"description": "You can use the Web Search extension in multiple ways.\nThis step will show you that you can run the extension using the keyboard shortcut of:\n``Alt + ``` (backtick).",
						"media": {
							"image": "images/web-search-keyboard-shortcut.webp",
							"altText": "Keyboard shortcut for the Web Search extension which is Alt+` (backtick)"
						},
						"when": "isWindows || isMac || isWeb && !isLinux"
					},
					{
						"id": "contextmenu",
						"title": "Search From the Context Menu üñ±Ô∏è",
						"description": "You can right click on any selected text in your code and search from the context menu.",
						"media": {
							"image": "images/web-search-context-menu-zoom.webp",
							"altText": "A screenshot showing a bunch of text in the text editor of VS Code with the text 'eslint' selected and a context menu beside it with the text 'Web Search selected text' highlighted"
						}
					},
					{
						"id": "commandpalette",
						"title": "Search From the Command Palette ‚ò∞",
						"description": "You can also use the extension at any time via the Command Palette. Simply select ``Web Search`` from the Command Palette and type a search query.",
						"media": {
							"image": "images/web-search.webp",
							"altText": "A screenshot of code in the VS Code editor with a popup at the top coming from VS Code's Command Palette. The Command Palette text entry has someone who has typed 'web search' to get the extension to suggest itself as a recommended action"
						}
					}
				]
			}
		],
		"configuration": [
			{
				"type": "object",
				"title": "Search Engine",
				"order": 1,
				"properties": {
					"webSearch.searchEngine": {
						"type": "string",
						"default": "https://www.google.com/search?q=%s",
						"markdownDescription": "***Depreciated - use `searchEngines` instead***\n\nSearch engine to use for the Web Search extension. Replace the query with ```%s```, e.g. ```https://www.google.com/search?q=%s```, the same way as you would when adding additional search engines to the Chrome browser settings.",
						"scope": "resource",
						"pattern": "^(http|https)+://([a-zA-Z]*([a-zA-Z]*)*).*%s.*$",
						"patternErrorMessage": "Value must be valid URL, starting with http/https and containing '%s' query wildcard",
						"deprecationMessage": "Deprecated: Please use webSearch.searchEngines instead.",
						"markdownDeprecationMessage": "***Depreciated**: Please use `#webSearch.searchEngines#` instead"
					},
					"webSearch.searchEngines": {
						"type": "object",
						"markdownDescription": "Search engines to use for the Web Search extension. \n\nAdd search engines using the **Add Item** button below.\n* ***Item*** is the search engine name\n* ***Value*** is the full URL with the search query. \n\nReplace the query with ```%s```, e.g. ```https://www.google.com/search?q=%s```, the same way as you would when adding additional search engines to Chrome or Edge in the browser settings.\n\n**How to get the Value URL:**\n1. Visit the site you wish to use and locate the site's search bar\n2. Search for something unique like `potato` so you can get the URL later. Press *Enter*\n3. Go into the address bar and replace the word `potato` with `%s`, then copy the full URL and paste it into this setting field, **Value** below",
						"additionalProperties": {
							"type": "string",
							"description": "Item is the name of the search engine. Value is the search engine URL. The URL must start with http:// or https:// and contain the query parameter '%s' which will be replaced with the selected text."
						},
						"scope": "resource",
						"default": {}
					}
				}
			},
			{
				"title": "User Interface",
				"order": 4,
				"type": "object",
				"properties": {
					"webSearch.enableContextMenu": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Enable the Web Search context menu item (right click menu) in the editor",
						"scope": "resource"
					},
					"webSearch.keepSearchBarOpen": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "When using the extension, this setting will keep the extension active (persistent), even if focus is lost from the search bar or search engine selection dropdown.\n\nThis can be useful if you wish to copy multiple parts of code to perform a search, or are referencing different sections.\n\n*Dismiss the search bar by pressing __Esc__*",
						"scope": "resource"
					}
				}
			},
			{
				"title": "Notifications",
				"order": 3,
				"type": "object",
				"properties": {
					"webSearch.messageLevels": {
						"type": "string",
						"markdownDescription": "Controls the levels of notification messages generated by the extension. This setting will allow you to hide warning messages, hide information messages, or hide both. \n\n*You will not be able to hide error messages **or messages generated from the extension's walkthroughs** at this time as they are key to the operation of the extension.*",
						"scope": "resource",
						"enum": [
							"showAll",
							"showInformationMessagesOnly",
							"showWarningMessagesOnly",
							"hideAll"
						],
						"enumItemLabels": [
							"Show All",
							"Show Information Messages Only",
							"Show Warning Messages Only",
							"Hide All"
						],
						"markdownEnumDescriptions": [
							"Will display information messages and warning messages generated by the Web Search extension",
							"Will no longer display warning messages. \n\n*Errors and information messages will still display*",
							"Will no longer display information messages. \n\n*Errors will still display*",
							"Will no longer display information messages or warning messages. \n\n*Errors will still display, as well as messages from the walkthroughs*"
						],
						"default": "showAll"
					}
				}
			},
			{
				"title": "Suggestions",
				"order": 2,
				"type": "object",
				"properties": {
					"webSearch.allowSuggestions": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Enable the extension to suggest autocomplete Google keywords based on your search query as you type.",
						"scope": "resource"
					}
				}
			},
			{
				"title": "Search Bar",
				"order": 5,
				"type": "object",
				"properties": {
					"webSearch.allowManualSearch": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Enable the extension to run when no text is selected.\n\nIf this setting is enabled, a __search bar__ will prompt for a search query when the extension's search command is run by using the extension's keyboard shortcut.",
						"scope": "resource"
					},
					"webSearch.addToSelectedText": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "When using the extension with selected text, this setting will allow you to __elaborate on the selected text__ before performing the search.\n\nIf this setting is enabled, the search bar will prompt for additional content to append to the end of the query, and will guide you with autocomplete suggestions as well.",
						"scope": "resource"
					}
				}
			},
			{
				"title": "Demo Mode",
				"order": 6,
				"type": "object",
				"properties": {
					"webSearch.useDefaultSearchEnginesList": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Enable the Web Search extension to use default values. Essentially, this is the extension's ***Demo Mode***. Disabling this will favor your own custom search engines list entered in `searchEngines`."
					},
					"webSearch.defaultSearchEngines": {
						"type": "array",
						"markdownDescription": "Default search engines to use for the Web Search extension. If you want to use your own, disable the checkbox `#webSearch.useDefaultSearchEnginesList#`",
						"scope": "window",
						"default": [
							{
								"sitename": "Google",
								"url": "https://www.google.com/search?q=%s"
							},
							{
								"sitename": "Stack Overflow",
								"url": "https://stackoverflow.com/search?q=%s"
							},
							{
								"sitename": "Wikipedia",
								"url": "https://en.wikipedia.org/wiki/Special:Search?search=%s"
							},
							{
								"sitename": "GitHub",
								"url": "https://github.com/search?q=%s"
							},
							{
								"sitename": "Reddit",
								"url": "https://www.reddit.com/search?q=%s"
							},
							{
								"sitename": "PageSpeed Insights",
								"url": "https://pagespeed.web.dev/report?url=%s"
							},
							{
								"sitename": "DuckDuckGo",
								"url": "https://duckduckgo.com/?q=%s"
							}
						]
					}
				}
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "editorHasSelection && config.webSearch.enableContextMenu && !isLinux",
					"command": "WebSearch.webSearchMenu",
					"group": "navigation"
				},
				{
					"when": "editorHasSelection && config.webSearch.enableContextMenu && isLinux",
					"command": "WebSearch.webSearch",
					"group": "navigation"
				}
			]
		},
		"snippets": [
			{
				"language": "json",
				"path": "snippets/json/json.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile && npm run package-web",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"lint": "eslint -c .eslintrc.js --ext .ts ./src",
		"compile-web": "webpack --config ./src/web-extension.webpack.config.js",
		"watch-web": "webpack --watch --config ./src/web-extension.webpack.config.js",
		"package-web": "webpack --mode production --devtool hidden-source-map --config ./src/web-extension.webpack.config.js",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^8.1.0",
		"@types/mocha": "^10.0.1",
		"@types/node": "^20.12.7",
		"@types/sinon": "^10.0.13",
		"@types/vscode": "^1.67.2",
		"@typescript-eslint/eslint-plugin": "^7.15.0",
		"@typescript-eslint/parser": "^7.15.0",
		"@vscode/test-electron": "^2.4.0",
		"@vscode/vsce": "^2.29.0",
		"eslint": "^8.55.0",
		"mocha": "^10.2.0",
		"path-browserify": "^1.0.1",
		"process": "^0.11.10",
		"ts-loader": "^9.5.1",
		"typescript": "^5.5.2",
		"util": "^0.12.5",
		"webpack": "^5.91.0",
		"webpack-cli": "^5.1.4"
	},
	"dependencies": {
		"get-google-suggestions": "^1.0.2",
		"open": "^8.4.2",
		"sinon": "^15.0.4"
	}
}