{
	"name": "websearchengine",
	"displayName": "Web Search",
	"icon": "icon.png",
	"description": "Search the web directly from inside VSCode on your favorite search engines / websites (add as many as you like, customizable in settings like Google Chrome)",
	"version": "4.1.1",
	"publisher": "BenRogersWPG",
	"author": {
		"name": "Ben Rogers"
	},
	"homepage": "https://github.com/BenRogersWPG/WebSearch/blob/master/README.md",
	"license": "SEE LICENSE IN LICENSE.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/BenRogersWPG/WebSearch"
	},
	"bugs": "https://github.com/BenRogersWPG/WebSearch/issues",
	"sponsor": {
		"url": "https://github.com/sponsors/BenRogersWPG"
	},
	"engines": {
		"vscode": "^1.68.0"
	},
	"categories": [
		"Keymaps",
		"Snippets",
		"Other"
	],
	"keywords": [
		"Search",
		"Google",
		"Research",
		"Browser",
		"Web",
		"Customizable",
		"Settings",
		"Research",
		"Menu",
		"Search Engine",
		"SEO"
	],
	"extensionKind": [
		"workspace",
		"ui"
	],
	"activationEvents": [
		"onCommand:WebSearch.webSearchMenu",
		"onCommand:WebSearch.changeSetting",
		"onCommand:WebSearch.openSettings",
		"onCommand:WebSearch.setContext",
		"onCommand:WebSearch.setPaletteContext"
	],
	"browser": "./dist/web/extension.js",
	"main": "./dist/web/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "WebSearch.webSearchMenu",
				"title": "Web Search selected text",
				"when": "editorTextFocus"
			}
		],
		"keybindings": [
			{
				"key": "alt+`",
				"command": "WebSearch.webSearchMenu"
			}
		],
		"walkthroughs": [
			{
				"id": "WebSearchWalkthrough",
				"title": "Web Search Walkthrough",
				"description": "Some tips for using the Web Search extension.",
				"steps": [
					{
						"id": "selectedtext",
						"title": "FYI - Search Using Selected Text",
						"description": "The extension will always prefer to search using the selected text. If you run it without first selecting text (like all of these walkthrough examples), it will prompt you for a search query using the search bar at the top of the screen.",
						"media": {
							"image": "images/web-search-submenu.png",
							"altText": "Running the Web Search extension when text is selected"
						}
					},
					{
						"id": "runcommand",
						"title": "Perform a Demo Search üîé",
						"description": "This step will run a Web Search with **demo mode** on to show you how it looks with multiple sites\nSimply run the command, type a search query in the search bar above, and see the site list options.\n[Run Command](command:WebSearch.webSearchMenu)",
						"media": {
							"image": "images/web-search-submenu-demo-large.png",
							"altText": "Screenshot of the Web Search submenu with multiple sites"
						},
						"completionEvents": [
							"onCommand:WebSearch.webSearchMenu"
						]
					},
					{
						"id": "opensettings",
						"title": "Add Your Own Search Engines ‚ûï",
						"description": "This step will open the extension settings.\nAdd search engines using Item/Value pairs like the GIF to the right.\nSearch engines are added in the same way you would add one in Google Chrome using `%s` in the URL to replace the search query.\n[Start Adding Custom Search Engines](command:WebSearch.openSettings)",
						"media": {
							"image": "images/web-search-add-any-site.gif",
							"altText": "GIF of adding a new search engine to the Web Search extension"
						},
						"completionEvents": [
							"onCommand:WebSearch.openSettings"
						]
					},
					{
						"id": "changesetting",
						"title": "Turn Off Demo Mode ‚öôÔ∏è",
						"description": "This step will turn off demo mode so you can start entering your own custom search engines.\nYou can always turn demo mode back on in the extension settings.\n[Turn off Demo Mode](command:WebSearch.changeSetting)",
						"media": {
							"image": "images/web-search-add-any-site.gif",
							"altText": "GIF of adding a new search engine to the Web Search extension"
						},
						"completionEvents": [
							"onContext:demoModeOff"
						]
					},
					{
						"id": "runsecondcommand",
						"title": "Perform a Search With Your Own Search Engines",
						"description": "Now that you have added your own search engines and turned off **demo mode**, this step will show you how it looks with your custom-added search engines\nSimply run the command, type a search query, and see the site list options.\n[Run Command](command:WebSearch.setContext)",
						"media": {
							"image": "images/web-search-submenu-demo-large.png",
							"altText": "Screenshot of the Web Search submenu with multiple sites"
						},
						"completionEvents": [
							"onContext:customSearch"
						]
					},
					{
						"id": "keybindings",
						"title": "Search Using Keyboard Shortcut ‚å®Ô∏è",
						"description": "You can use the Web Search extension in multiple ways.\nThis step will show you that you can run the extension using the keyboard shortcut of:\n``Alt + ``` (backtick).",
						"media": {
							"image": "images/web-search-keyboard-shortcut.png",
							"altText": "Keyboard shortcut for the Web Search extension"
						}
					},
					{
						"id": "contextmenu",
						"title": "Search From the Context Menu üñ±Ô∏è",
						"description": "You can right click on any selected text in your code and search from the context menu.",
						"media": {
							"image": "images/web-search-context-menu-large-cropped.png",
							"altText": "Running the Web Search extension from the context menu"
						}
					},
					{
						"id": "commandpalette",
						"title": "Search From the Command Palette ‚ò∞",
						"description": "You can also use the extension at any time via the Command Palette. Simply select ``Web Search`` from the Command Palette and type a search query.\n[Run Command](command:WebSearch.setPaletteContext)",
						"media": {
							"image": "images/web-search.png",
							"altText": "Running the Web Search extension from the Command Palette"
						},
						"completionEvents": [
							"onContext:searchCommandPalette"
						]
					},
					{
						"id": "onlyonesearchengine",
						"title": "Last FYI - Only One Search Engine",
						"description": "If you only have one search engine in your custom settings, then the extension will automatically search from that site.\nIt will not pop up with the submenu of sites to search for. Remember to add more search engines if you want to search from multiple sites.\n[Start Adding Custom Search Engines](command:WebSearch.openSettings)",
						"media": {
							"image": "images/web-search-add-any-site.gif",
							"altText": "GIF of adding a new search engine to the Web Search extension"
						}
					}
				]
			}
		],
		"configuration": {
			"type": "string",
			"title": "Web Search - Search Engine",
			"properties": {
				"webSearch.searchEngine": {
					"type": "string",
					"default": "https://www.google.com/search?q=%s",
					"markdownDescription": "***Depreciated - use `webSearch.searchEngines` instead***\n\nSearch engine to use for the Web Search extension. Replace the query with ```%s```, e.g. ```https://www.google.com/search?q=%s```, the same way as you would when adding additional search engines to the Chrome browser settings.",
					"scope": "resource"
				},
				"webSearch.enableContextMenu": {
					"type": "boolean",
					"default": "true",
					"markdownDescription": "Enable the Web Search context menu item (right click menu) in the editor",
					"scope": "resource"
				},
				"webSearch.useDefaultSearchEnginesList": {
					"type": "boolean",
					"default": "true",
					"markdownDescription": "Enable the Web Search extension to use default values. Essentially, this is the extension's ***Demo Mode***. Disabling this will favor your own custom search engines list entered in `webSearch.searchEngines`.",
					"scope": "resource"
				},
				"webSearch.allowManualSearch": {
					"type": "boolean",
					"default": "true",
					"markdownDescription": "Enable the extension to run when no text is selected.\n\nIf this setting is enabled, a __search bar__ will prompt for a search query when the extension's search command is run by using keyboard shortcut ```Alt + ` ```.",
					"scope": "resource"
				},
				"webSearch.searchEngines": {
					"type": "object",
					"markdownDescription": "Search engine to use for the Web Search extension. \n***Item*** is the search engine name\n***Value*** is the full url with the search query. Replace the query with ```%s```, e.g. ```https://www.google.com/search?q=%s```, the same way as you would when adding additional search engines to the Chrome browser settings.\nAdd additional search engines using the same format below using the Add Item button. ",
					"additionalProperties": {
						"type": "string",
						"description": "Item is the name of the search engine. Value is the search engine URL. The URL must contain the query parameter '%s' which will be replaced with the selected text."
					},
					"scope": "resource",
					"default": {}
				},
				"webSearch.defaultSearchEngines": {
					"type": "array",
					"markdownDescription": "Default search engines to use for the Web Search extension. If you want to use your own, disable the new checkbox `webSearch.useDefaultSearchEnginesList`",
					"scope": "window",
					"default": [
						{
							"sitename": "Google",
							"url": "https://www.google.com/search?q=%s"
						},
						{
							"sitename": "Stack Overflow",
							"url": "https://stackoverflow.com/search?q=%s"
						},
						{
							"sitename": "Wikipedia",
							"url": "https://en.wikipedia.org/wiki/Special:Search?search=%s"
						},
						{
							"sitename": "GitHub",
							"url": "https://github.com/search?q=%s"
						},
						{
							"sitename": "Reddit",
							"url": "https://www.reddit.com/search?q=%s"
						},
						{
							"sitename": "PageSpeed Insights",
							"url": "https://pagespeed.web.dev/report?url=%s"
						},
						{
							"sitename": "DuckDuckGo",
							"url": "https://duckduckgo.com/?q=%s"
						}
					]
				}
			}
		},
		"menus": {
			"editor/context": [
				{
					"when": "editorHasSelection && config.webSearch.enableContextMenu",
					"command": "WebSearch.webSearchMenu",
					"group": "navigation"
				}
			]
		},
		"snippets": [
			{
				"language": "json",
				"path": "snippets/json/json.json"
			}
		]
	},
	"scripts": {
		"test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/index.js",
		"pretest": "npm run compile-web",
		"vscode:prepublish": "npm run package-web",
		"compile-web": "webpack",
		"compile": "tsc -p ./",
		"watch-web": "webpack --watch",
		"watch": "tsc -watch -p ./",
		"test-compile": "tsc -p ./ && npm run webpack",
		"webpack": "webpack --mode none",
		"package-web": "webpack --mode production --devtool hidden-source-map",
		"lint": "eslint src --ext ts",
		"run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."
	},
	"devDependencies": {
		"@types/mocha": "^9.1.0",
		"@types/vscode": "^1.68.0",
		"@types/webpack-env": "^1.17.0",
		"@typescript-eslint/eslint-plugin": "^5.27.1",
		"@typescript-eslint/parser": "^5.28.0",
		"@vscode/test-web": "^0.0.24",
		"assert": "^2.0.0",
		"eslint": "^8.17.0",
		"mocha": "^10.0.0",
		"process": "^0.11.10",
		"ts-loader": "^9.2.8",
		"typescript": "^4.7.3",
		"webpack": "^5.73.0",
		"webpack-cli": "^4.10.0"
	}
}