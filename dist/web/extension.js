(()=>{"use strict";var e={236:function(e,n,t){var o=this&&this.__awaiter||function(e,n,t,o){return new(t||(t=Promise))((function(i,s){function a(e){try{c(o.next(e))}catch(e){s(e)}}function r(e){try{c(o.throw(e))}catch(e){s(e)}}function c(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,r)}c((o=o.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.deactivate=n.activate=void 0;const i=t(496);n.activate=function(e){console.log('Thank you for installing Web Search, the extension is now active! To use, right click some highlighted text in your editor or type "web search" in the command palette.');const n=i.window.createOutputChannel("Web Search","markdown");function t(e=!1){var t;return o(this,void 0,void 0,(function*(){const o=i.window.activeTextEditor;let s=e?"eslint":null===(t=i.window.activeTextEditor)||void 0===t?void 0:t.document.getText(o.selection);const a=i.workspace.getConfiguration("webSearch").get("allowManualSearch"),r=i.workspace.getConfiguration("webSearch").get("useDefaultSearchEnginesList");if(!(void 0!==s&&""!==s||a))return void i.window.showInformationMessage("No text selected. Please select text in the editor and try again.");if((void 0===s||""===s)&&a&&(s=yield i.window.showInputBox({placeHolder:"Please enter the text you would like to search for.",prompt:"Please enter the text you would like to search for.",ignoreFocusOut:!0,validateInput:e=>""===e?"Please enter a search term.":null}),void 0===s||""===s))return void i.window.showInformationMessage("No text entered. Please enter text in the prompt, or select text.");const c=i.workspace.getConfiguration("webSearch").get("searchEngine"),d=new Array(i.workspace.getConfiguration("webSearch").get("searchEngines")),l=new Array(i.workspace.getConfiguration("webSearch").get("defaultSearchEngines"));let h=[];r&&l.forEach((e=>{Object.entries(e).forEach((([e,n])=>{h.push({label:n.sitename,description:n.url,detail:`Search ${n.sitename} for ${s?s.length<=60?s.slice(0,60):s.slice(0,60).concat("…"):""}`})}))}));var u=JSON.parse(JSON.stringify(d)),m=Object.keys(u[0]).map((e=>[String(e),u[0][e]]));for(let e=0;e<m.length;e++)h.push({label:m[e][0],description:m[e][1],detail:`Search ${m[e][0]} for ${s?s.length<=60?s.slice(0,60):s.slice(0,60).concat("…"):""}`});if(r||0===h.length){const e={label:"Search Engine",description:c,detail:"Search Engine from old settings"};h.push(e)}let g;h=h.filter(((e,n,t)=>n===t.findIndex((n=>n.description===e.description))));let w=!1;h.length>1?g=yield i.window.showQuickPick(h):(g=h[0],w=!0);let f="";if(null!=g)if(f=null==g?void 0:g.description,f.includes("%s"))f=f.replace("%s",s||""),w?i.window.showInformationMessage(`Only one search engine exists, so searching ${(null==g?void 0:g.label)?null==g?void 0:g.label:"web"} directly for: ${s}. \nFeel free to add more search engines in the settings.`):i.window.showInformationMessage(`Searching ${(null==g?void 0:g.label)?null==g?void 0:g.label:"web"} for: ${s}`),i.env.openExternal(i.Uri.parse(f));else{const e=`Search engine, *${(null==g?void 0:g.label)?null==g?void 0:g.label:"web"}* setting is not valid. Please check your custom settings.`;n.appendLine(e+"\nBe sure to include `%s` in the search engine URL."),console.log(e),"Edit Search Engine"===(yield i.window.showErrorMessage(e,"Edit Search Engine"))&&(i.commands.executeCommand("workbench.action.openSettings","WebSearch.searchEngines"),i.window.showInformationMessage(`Make changes to your invalid search engine, ${(null==g?void 0:g.label)?null==g?void 0:g.label:"web"}. Make sure to add '%s' in the Value field`))}else i.window.showWarningMessage("No search engine selected. Please select one from the list and try again.")}))}e.subscriptions.push(i.commands.registerCommand("WebSearch.selectedTextDemo",(()=>o(this,void 0,void 0,(function*(){yield new Promise((e=>setTimeout(e,1e3))),i.commands.executeCommand("setContext","searchSelectedText",!0),i.window.showInformationMessage("Select the search engine to use using the list above."),t(!0)}))))),e.subscriptions.push(i.commands.registerCommand("WebSearch.firstRun",(()=>o(this,void 0,void 0,(function*(){yield new Promise((e=>setTimeout(e,500))),i.commands.executeCommand("setContext","firstRun",!0),i.window.showInformationMessage("Type a query in the search bar at the top of the screen & press Enter."),t()}))))),e.subscriptions.push(i.commands.registerCommand("WebSearch.changeSetting",(()=>o(this,void 0,void 0,(function*(){yield new Promise((e=>setTimeout(e,1e3))),i.workspace.getConfiguration("webSearch").update("useDefaultSearchEnginesList",!1),i.commands.executeCommand("setContext","demoModeOff",!0),i.window.showInformationMessage("Demo mode off. Remember to add your own search engines in settings.")}))))),e.subscriptions.push(i.commands.registerCommand("WebSearch.openSettings",(()=>{i.commands.executeCommand("workbench.action.openSettings","WebSearch.searchEngines"),i.window.showInformationMessage("Add your own search engines by clicking the Add Item button.")}))),e.subscriptions.push(i.commands.registerCommand("WebSearch.setContext",(()=>o(this,void 0,void 0,(function*(){yield new Promise((e=>setTimeout(e,1e3))),i.commands.executeCommand("setContext","customSearch",!0),i.window.showInformationMessage("You should now see your custom search engines in the search bar."),t()}))))),e.subscriptions.push(i.commands.registerCommand("WebSearch.setPaletteContext",(()=>o(this,void 0,void 0,(function*(){yield new Promise((e=>setTimeout(e,1e3))),i.commands.executeCommand("setContext","searchCommandPalette",!0),i.window.showInformationMessage('Run the extension by typing "web search" in the command palette.'),t()}))))),e.subscriptions.push(i.commands.registerCommand("WebSearch.webSearchMenu",(()=>{t()})))},n.deactivate=function(){}},496:e=>{e.exports=require("vscode")}},n={},t=function t(o){var i=n[o];if(void 0!==i)return i.exports;var s=n[o]={exports:{}};return e[o].call(s.exports,s,s.exports,t),s.exports}(236),o=exports;for(var i in t)o[i]=t[i];t.__esModule&&Object.defineProperty(o,"__esModule",{value:!0})})();